"""Add chapaign_id to ads

Revision ID: 5e6b6cc47c3f
Revises: 4da1e2eb6435
Create Date: 2025-09-11 07:49:23.833900

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5e6b6cc47c3f'
down_revision: Union[str, Sequence[str], None] = '4da1e2eb6435'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('ads', schema=None) as batch_op:
        batch_op.add_column(sa.Column('campaign_id', sa.Integer(), nullable=True))
        batch_op.create_foreign_key(None, 'ad_campaigns', ['campaign_id'], ['id'])

    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('admin_user_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('event_type', sa.String(length=100), nullable=False))
        batch_op.add_column(sa.Column('event_category', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('description', sa.Text(), nullable=False))
        batch_op.add_column(sa.Column('details', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('target_type', sa.String(length=100), nullable=True))
        batch_op.add_column(sa.Column('target_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('ip_address', sa.String(length=45), nullable=True))
        batch_op.add_column(sa.Column('user_agent', sa.Text(), nullable=True))
        batch_op.add_column(sa.Column('session_id', sa.String(length=255), nullable=True))
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'admin_users', ['admin_user_id'], ['id'])
        batch_op.drop_column('actor')
        batch_op.drop_column('entity')
        batch_op.drop_column('action')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.create_foreign_key(None, 'users', ['buyer_id'], ['id'])
        batch_op.create_foreign_key(None, 'sellers', ['seller_id'], ['id'])

    with op.batch_alter_table('ratings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('seller_id', sa.Integer(), nullable=False))
        batch_op.create_foreign_key(None, 'sellers', ['seller_id'], ['id'])

    with op.batch_alter_table('sellers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('phone', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('subscription', sa.String(), nullable=False))
        batch_op.add_column(sa.Column('store_url', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('store_policies', sa.JSON(), nullable=True))
        batch_op.add_column(sa.Column('is_featured', sa.Boolean(), nullable=True))
        batch_op.add_column(sa.Column('is_verified', sa.Boolean(), nullable=True))
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_index(batch_op.f('ix_sellers_user_id'))
        batch_op.drop_constraint(batch_op.f('sellers_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('subscription_type')
        batch_op.drop_column('rating')
        batch_op.drop_column('total_reviews')
        batch_op.drop_column('description')
        batch_op.drop_column('banner_url')
        batch_op.drop_column('is_active')

    with op.batch_alter_table('user_profile_changes', schema=None) as batch_op:
        batch_op.alter_column('changed_by',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('old_value',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('new_value',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
        batch_op.alter_column('change_type',
               existing_type=sa.VARCHAR(),
               nullable=True)
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'users', ['changed_by'], ['id'])
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('ip_address')
        batch_op.drop_column('user_agent')

    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.alter_column('created_at',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'users', ['user_id'], ['id'])
        batch_op.drop_column('is_revoked')
        batch_op.drop_column('last_seen_at')
        batch_op.drop_column('device_id')

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(), nullable=False))
        batch_op.create_index(batch_op.f('ix_users_username'), ['username'], unique=True)
        batch_op.drop_column('full_name')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.drop_index(batch_op.f('ix_users_username'))
        batch_op.drop_column('username')

    with op.batch_alter_table('user_sessions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('device_id', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('last_seen_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('is_revoked', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)

    with op.batch_alter_table('user_profile_changes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('user_agent', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('ip_address', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('created_at',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.alter_column('change_type',
               existing_type=sa.VARCHAR(),
               nullable=False)
        batch_op.alter_column('new_value',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('old_value',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
        batch_op.alter_column('changed_by',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('sellers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('banner_url', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('description', sa.VARCHAR(length=1024), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('total_reviews', sa.INTEGER(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('rating', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('subscription_type', sa.VARCHAR(length=50), autoincrement=False, nullable=True))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('sellers_user_id_fkey'), 'users', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_index(batch_op.f('ix_sellers_user_id'), ['user_id'], unique=False)
        batch_op.alter_column('user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_column('is_verified')
        batch_op.drop_column('is_featured')
        batch_op.drop_column('store_policies')
        batch_op.drop_column('store_url')
        batch_op.drop_column('subscription')
        batch_op.drop_column('phone')
        batch_op.drop_column('email')

    with op.batch_alter_table('ratings', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('seller_id')

    with op.batch_alter_table('orders', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')

    with op.batch_alter_table('audit_logs', schema=None) as batch_op:
        batch_op.add_column(sa.Column('action', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('entity', sa.VARCHAR(), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('actor', sa.VARCHAR(), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('session_id')
        batch_op.drop_column('user_agent')
        batch_op.drop_column('ip_address')
        batch_op.drop_column('target_id')
        batch_op.drop_column('target_type')
        batch_op.drop_column('details')
        batch_op.drop_column('description')
        batch_op.drop_column('event_category')
        batch_op.drop_column('event_type')
        batch_op.drop_column('admin_user_id')
        batch_op.drop_column('user_id')

    with op.batch_alter_table('ads', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_column('campaign_id')

    # ### end Alembic commands ###
